@model Spinx.Domain.Quizs.Quiz
@using Spinx.Domain.Members;
@*@{
        ViewBag.Title = Model.MetaTitle ?? Model.Title;
        ViewBag.MetaDescription = Model.MetaDescription ?? Model.ShortDescription;
    }*@

<!-- Job Board: Page Banner Title -->
<section class="cmn-banner page-title-banner">
    <div class="imgDiv" style="background-image: url(Content/images/travel7.jpg);"></div>
    <div class="banner-title">
        @*<h1>Resources</h1>*@
    </div>
</section>


<section class="quiz-detail-wrap" ng-controller="ctrlList">
    <div class="clearfix fix-wrap">
        <div class="left-content">

            <div class="back-link">
                <a href="quiz">&lt; &nbsp;Back</a>
            </div>

            <div class="quiz-detail">
                <div class="top-content">
                    <h2><img src="@Model.QuizCategory.CategoryIcon" width="24" alt="title-icon"/><span class="quiz-title-test">@Model.Title</span></h2>
                    <div class="short-desc">
                        <div><span id="time"></span> minutes</div>
                    </div>
                </div>
                <div class="left-content">
                    <ul id="ulQuestionNumber">
                        <li ng-repeat="item in memberQuizList" ng-class="{active :item.SortOrder == list.sortOrder,green : item.IsAttempt === true,blue: item.IsAttempt === false }"> <a href="javascript:;" ng-click="goToQuestion(item.SortOrder)" ng-bind="item.SortOrder"></a></li>

                    </ul>
                </div>
                <div class="short-quiz">

                    <div class="form-group">
                        <div class="serial-no" ng-bind="list.sortOrder"></div>
                        <div class="quiz-title">
                            <h3 ng-bind="list.question"></h3>
                            <label class="custom-radio" ng-repeat="item in list.quizAnswer">
                                <input ng-model="list.quizAnswerId" ng-value="item.id" type="radio" name="questionOption" ng-click="memberAnswer(item.id,list.questionId,list.sortOrder)"/>
                                <div class="checkmark" ng-bind="item.answer"></div>
                            </label>
                        </div>
                    </div>
                    <a class="btn-primary btn-continue" ng-disabled="filters.sortOrder == 1" ng-class="filters.sortOrder == 1 ? 'submit-disabled' : ''" ng-click="goToQuestion(filters.sortOrder - 1)">Prev</a>
                    <a class="btn-primary btn-continue" ng-disabled="filters.sortOrder == totelQuestion" ng-class="filters.sortOrder == totelQuestion ? 'submit-disabled' : ''" ng-click="goToQuestion(filters.sortOrder + 1)">Next</a>
                    <a ng-click="submitQuiz()" class="btn-primary btn-continue">Finish</a>

                </div>

            </div>
            <div class="right-comment">
                <div class="divlast">
                    <span class="spnabox" style="background-color:#0B89D3;">&nbsp;&nbsp;&nbsp;</span> Not submited 
                </div>
                <div class="divlast">
                    <span class="spnabox" style="background-color:#FFCC01;">&nbsp;&nbsp;&nbsp;</span> Not Viewed  
                </div>
                <div class="divlast">
                    <span class="spnabox" style="background-color:green;">&nbsp;&nbsp;&nbsp;</span> Submited 
                </div>
                <div class="divlast">
                    <span class="spnabox" style="background-color:#000000;">&nbsp;&nbsp;&nbsp;</span> Active
                </div>
            </div>
        </div>

    </div>
</section>

@section scripts{
    <script>
        $(document).ready(function() {

            $("#liQuizzes").addClass("active");
        });
        var sortOrder = @(ViewBag.SortOrder);
        var memberResultId = @(ViewBag.MemberResultId);
        var totelQuestion = @(ViewBag.totelQuestion);
        var totalTimeMinute = @(ViewBag.TotalTimeMinute);
        myApp = angular.module('myApp', ["ngCookies"]);

        myApp.controller("ctrlList",
            [
                "$scope", "$http", "$filter", function($scope, $http, $filter) {
                    var searchApiUrl = 'api/quiz/getQuestion/';
                    $scope.virtualDir = virtualDir;
                    $scope.result = {};
                    $scope.filters = {};
                    $scope.memberQuizList = JSON.parse('@(Html.Raw(ViewBag.MemberQuizList))');
                    $scope.diffInSeconds = @(ViewBag.diffInSeconds);
                    $scope.totelQuestion = totelQuestion;
                    $scope.answerFilters = {};
                    $scope.filters.sortOrder = sortOrder;
                    $scope.filters.lastSortOrder = sortOrder;
                    $scope.filters.memberResultId = memberResultId;
                    $scope.answerFilters.memberResultId = $scope.filters.memberResultId;
                    $scope.data = [];
                    $scope.isLoadComplete = false;
                    var fiveMinutes = (60 * totalTimeMinute) - $scope.diffInSeconds,
                        display = document.querySelector('#time');
                    startTimer(fiveMinutes, display);

                    $scope.load = function() {
                        $http.get(searchApiUrl, { params: $scope.filters }).then(function(resp) {
                            $scope.result = resp.data;
                            $scope.list = resp.data.data;
                            $scope.filters.lastSortOrder = $scope.list.sortOrder;
                            $scope.isLoadComplete = true;
                        });
                    };
                    $scope.load();

                    function startTimer(duration, display) {
                        var timer = duration, minutes, seconds;
                        var setTimeInterval =   setInterval(function () {
                            minutes = parseInt(timer / 60, 10);
                            seconds = parseInt(timer % 60, 10);

                            minutes = minutes < 10 ? "0" + minutes : minutes;
                            seconds = seconds < 10 ? "0" + seconds : seconds;

                            display.textContent = minutes + ":" + seconds;
                            if (--timer < 0) {
                                //timer = duration;
                                clearInterval(setTimeInterval);
                                submitQuizFunction();
                                alert('Time out');

                            }
                        }, 1000);
                    }

                    window.onload = function () {
                       
                    };

                    $scope.goToQuestion = function(questionNumber) {
                        if (questionNumber > 0 && questionNumber <= $scope.totelQuestion) {
                            
                            //update member question numbers
                            if ($scope.list.quizAnswerId === null) {
                                angular.forEach($scope.memberQuizList,
                                    function(value, key) {
                                        if (value.SortOrder === $scope.filters.lastSortOrder) {
                                            value.IsAttempt = false;
                                        }
                                    });
                            }

                            $scope.filters.sortOrder = questionNumber;
                            $scope.load();
                        }
                    }
                    $scope.memberAnswer = function(answerId, questionId, sortOrder) {
                        $scope.answerFilters.quizAnswerId = answerId;
                        $scope.answerFilters.quizQuestionId = questionId;
                        $http.post('api/quiz/getAnswer/', $scope.answerFilters).then(function(resp) {
                            $scope.result = resp.data;
                            angular.forEach($scope.memberQuizList,
                                function(value, key) {
                                    if (value.SortOrder === sortOrder) {
                                        value.IsAttempt = true;
                                    }
                                });
                        });
                    };

                    var submitQuizFunction = function() {
                        $http.post('api/quiz/submitquiz/', { 'memberResultId': $scope.filters.memberResultId })
                            .then(function(resp) {
                                $scope.submitResult = resp.data;
                                if ($scope.submitResult.success) {
                                    if ($scope.submitResult.isRedirect)
                                        window.location.href = $scope.submitResult.redirect;
                                }

                            });
                    }

                    $scope.submitQuiz = function() {

                        if (confirm('Are you sure submit quiz !')) {
                            submitQuizFunction();
                        }
                    }

                   

                }
            ]);


    </script>
}